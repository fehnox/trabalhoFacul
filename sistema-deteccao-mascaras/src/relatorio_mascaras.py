<!-- filepath: c:\Users\Admin\Documents\GitHub\trabalhoFacul\DOCUMENTACAO_TECNICA.md -->
<div align="center">

# üìö Documenta√ß√£o T√©cnica do Sistema Inteligente de Detec√ß√£o de M√°scaras

### *Uma vis√£o detalhada sobre a arquitetura e funcionamento do sistema*

![Python](https://img.shields.io/badge/Python-3.8+-3776ab?style=for-the-badge&logo=python&logoColor=white)
![OpenCV](https://img.shields.io/badge/OpenCV-4.x-5C3EE8?style=for-the-badge&logo=opencv&logoColor=white)
![YOLOv8](https://img.shields.io/badge/YOLOv8-Ultralytics-FF6B35?style=for-the-badge&logo=yolo&logoColor=white)

</div>

---

## üõ†Ô∏è Arquitetura do Sistema

O sistema √© composto por v√°rias camadas que interagem entre si para realizar a detec√ß√£o de m√°scaras faciais em tempo real. Abaixo est√° uma vis√£o geral da arquitetura:

1. **Camada de Entrada**:
   - Captura de v√≠deo em tempo real atrav√©s de uma webcam ou processamento de imagens est√°ticas.

2. **Camada de Processamento**:
   - Utiliza a biblioteca OpenCV para manipula√ß√£o de imagens e v√≠deos.
   - Implementa o modelo YOLOv8 para detec√ß√£o de objetos, especificamente para identificar o uso de m√°scaras.

3. **Camada de Sa√≠da**:
   - Exibe os resultados em uma interface gr√°fica, mostrando as detec√ß√µes em tempo real com feedback visual.

## üìä Fluxo de Dados

O fluxo de dados no sistema √© o seguinte:

1. **Captura de Imagem**:
   - O sistema captura frames da webcam ou de uma imagem est√°tica.

2. **Pr√©-processamento**:
   - As imagens s√£o redimensionadas e normalizadas para serem compat√≠veis com o modelo YOLOv8.

3. **Detec√ß√£o**:
   - O modelo YOLOv8 processa a imagem e retorna as classes detectadas (m√°scara correta, m√°scara incorreta, sem m√°scara).

4. **P√≥s-processamento**:
   - Os resultados s√£o filtrados com base em um limiar de confian√ßa e as detec√ß√µes s√£o anotadas na imagem.

5. **Exibi√ß√£o**:
   - A imagem processada √© exibida em uma janela, mostrando as detec√ß√µes e suas respectivas classes.

## üìã Detalhes T√©cnicos

### Depend√™ncias

As principais bibliotecas utilizadas no projeto incluem:

- **Python 3.8+**
- **OpenCV**: Para manipula√ß√£o de imagens e v√≠deos.
- **Ultralytics YOLOv8**: Para detec√ß√£o de objetos.
- **NumPy**: Para opera√ß√µes num√©ricas.
- **Matplotlib**: Para visualiza√ß√£o de dados.

### Estrutura de Diret√≥rios

A estrutura do projeto √© organizada da seguinte forma: